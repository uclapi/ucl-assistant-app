// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecentResults renders a SearchControl component 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            clearButtonMode="always"
            placeholder="Search for a name or email..."
            placeholderTextColor="#6E707F"
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "backgroundColor": "#eaeaea",
                  "borderColor": "#6E707F",
                  "borderRadius": 10,
                  "color": "#4D5061",
                  "fontFamily": "apercu",
                  "fontSize": 16,
                  "height": 50,
                  "marginBottom": 10,
                  "marginLeft": 2,
                  "marginRight": 2,
                  "marginTop": 10,
                  "minWidth": 200,
                  "paddingBottom": 5,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 5,
                },
                Object {
                  "flex": 1,
                  "marginRight": 10,
                },
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#6E707F",
                "fontFamily": "apercu",
                "fontSize": 16,
                "marginBottom": 5,
                "marginTop": 5,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Start typing to get search results 
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "bottom": 0,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": "100%",
            "flexDirection": "row",
            "justifyContent": "flex-end",
            "paddingBottom": 4,
            "paddingEnd": 4,
            "position": "absolute",
            "width": "100%",
          }
        }
      >
        <TouchableWithoutFeedback
          hitSlop={
            Object {
              "bottom": 4,
              "left": 4,
              "right": 4,
              "top": 4,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(250, 186, 48, 0.95)",
                },
                Object {
                  "borderRadius": 14,
                  "height": 28,
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
              ]
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontSize": 12,
                  "includeFontPadding": false,
                  "lineHeight": 16,
                }
              }
            >
              Dismiss All
            </Text>
          </View>
        </TouchableWithoutFeedback>
      </View>
      <RCTScrollView
        data={
          Array [
            Object {
              "category": "Each child in a list should have a unique \\"key\\" prop.﻿%s﻿%s See https://fb.me/react-warning-keys for more information.﻿%s",
              "warnings": Array [
                YellowBoxWarning {
                  "message": Object {
                    "content": "Each child in a list should have a unique \\"key\\" prop.

Check the render method of \`RecentResults\`. See https://fb.me/react-warning-keys for more information.
    in RecentResult (created by RecentResults)
    in RecentResults
    in View (created by View)
    in View (created by AppContainer)
    in View (created by View)
    in View (created by AppContainer)
    in AppContainer (at src/index.js:26)",
                    "substitutions": Array [
                      Object {
                        "length": 45,
                        "offset": 53,
                      },
                      Object {
                        "length": 0,
                        "offset": 98,
                      },
                      Object {
                        "length": 245,
                        "offset": 157,
                      },
                    ],
                  },
                  "stack": Array [
                    Object {
                      "arguments": Array [],
                      "column": 29,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js",
                      "lineNumber": 58,
                      "methodName": "Function.parse",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 56,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/YellowBox.js",
                      "lineNumber": 180,
                      "methodName": "registerError",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 21,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/YellowBox.js",
                      "lineNumber": 84,
                      "methodName": "errorImpl",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 13,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/YellowBox.js",
                      "lineNumber": 63,
                      "methodName": "BufferedConsole.console.error",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 31,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 167,
                      "methodName": "warningWithoutStack",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 26,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 638,
                      "methodName": "warning",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 4,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 1792,
                      "methodName": "validateExplicitKey",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 8,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 1818,
                      "methodName": "validateChildKeys",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 6,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 2052,
                      "methodName": "Object.createElementWithValidation [as createElement]",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 4,
                      "file": "/home/huey/Desktop/ucl-assistant-app/screens/People/PeopleSearchScreen/RecentResults.tsx",
                      "lineNumber": 51,
                      "methodName": "RecentResults",
                    },
                  ],
                  "symbolicated": Object {
                    "error": null,
                    "stack": null,
                    "status": "NONE",
                  },
                },
              ],
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        maxToRenderPerBatch={10}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        scrollEnabled={false}
        scrollEventThrottle={50}
        scrollsToTop={false}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "height": 48.5,
          }
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            style={null}
          >
            <TouchableWithoutFeedback>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(250, 186, 48, 0.95)",
                    },
                    Object {
                      "height": 48,
                      "justifyContent": "center",
                      "marginTop": 0.5,
                      "paddingHorizontal": 12,
                    },
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={2}
                    style={
                      Object {
                        "color": "rgba(255, 255, 255, 1)",
                        "flex": 1,
                        "fontSize": 14,
                        "includeFontPadding": false,
                        "lineHeight": 18,
                      }
                    }
                  >
                    <Text>
                      Each child in a list should have a unique "key" prop.
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "rgba(255, 255, 255, 0.6)",
                        }
                      }
                    >
                      

Check the render method of \`RecentResults\`.
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "rgba(255, 255, 255, 0.6)",
                        }
                      }
                    >
                      
                    </Text>
                    <Text>
                       See https://fb.me/react-warning-keys for more information.
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "rgba(255, 255, 255, 0.6)",
                        }
                      }
                    >
                      
    in RecentResult (created by RecentResults)
    in RecentResults
    in View (created by View)
    in View (created by AppContainer)
    in View (created by View)
    in View (created by AppContainer)
    in AppContainer (at src/index.js:26)
                    </Text>
                  </Text>
                </View>
              </View>
            </TouchableWithoutFeedback>
          </View>
        </View>
      </RCTScrollView>
      <SafeAreaView
        style={
          Object {
            "backgroundColor": "rgba(250, 186, 48, 0.95)",
            "marginTop": 0.5,
          }
        }
      />
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <TextInput
          allowFontScaling={true}
          clearButtonMode="always"
          placeholder="Search for a name or email..."
          placeholderTextColor="#6E707F"
          rejectResponderTermination={true}
          style={
            Array [
              Object {
                "backgroundColor": "#eaeaea",
                "borderColor": "#6E707F",
                "borderRadius": 10,
                "color": "#4D5061",
                "fontFamily": "apercu",
                "fontSize": 16,
                "height": 50,
                "marginBottom": 10,
                "marginLeft": 2,
                "marginRight": 2,
                "marginTop": 10,
                "minWidth": 200,
                "paddingBottom": 5,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 5,
              },
              Object {
                "flex": 1,
                "marginRight": 10,
              },
            ]
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#6E707F",
              "fontFamily": "apercu",
              "fontSize": 16,
              "marginBottom": 5,
              "marginTop": 5,
              "textAlign": "center",
            },
            undefined,
          ]
        }
      >
        Start typing to get search results 
      </Text>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`RecentResults renders a filled RecentResults component 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#4D5061",
                "fontFamily": "apercu-bold",
                "fontSize": 28,
                "marginBottom": 2,
                "marginTop": 8,
              },
              undefined,
            ]
          }
        >
          Recently Searched
        </Text>
        <TouchableOpacity
          activeOpacity={0.9}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "alignSelf": "stretch",
                  "backgroundColor": "#fff",
                  "borderRadius": 10,
                  "marginBottom": 10,
                  "marginLeft": 2,
                  "marginRight": 2,
                  "marginTop": 5,
                  "padding": 10,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1845,
                  "shadowRadius": 1.62,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#eaeaea",
                  "borderRadius": 80,
                  "marginRight": 10,
                  "padding": 10,
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#4D5061",
                      "fontFamily": "apercu-bold",
                      "fontSize": 16,
                      "marginBottom": 0,
                      "marginTop": 1,
                    },
                    undefined,
                  ]
                }
              >
                Mr Potato
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#6E707F",
                      "fontFamily": "apercu",
                      "fontSize": 16,
                      "fontStyle": "italic",
                      "marginBottom": 1,
                      "marginTop": 0,
                    },
                    undefined,
                  ]
                }
              >
                Department of Agriculture
              </Text>
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          activeOpacity={0.9}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "alignSelf": "stretch",
                  "backgroundColor": "#fff",
                  "borderRadius": 10,
                  "marginBottom": 10,
                  "marginLeft": 2,
                  "marginRight": 2,
                  "marginTop": 5,
                  "padding": 10,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1845,
                  "shadowRadius": 1.62,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#eaeaea",
                  "borderRadius": 80,
                  "marginRight": 10,
                  "padding": 10,
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#4D5061",
                      "fontFamily": "apercu-bold",
                      "fontSize": 16,
                      "marginBottom": 0,
                      "marginTop": 1,
                    },
                    undefined,
                  ]
                }
              >
                Chris P Bacon
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#6E707F",
                      "fontFamily": "apercu",
                      "fontSize": 16,
                      "fontStyle": "italic",
                      "marginBottom": 1,
                      "marginTop": 0,
                    },
                    undefined,
                  ]
                }
              >
                Faculty of Medical Sciences
              </Text>
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          activeOpacity={0.9}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "alignSelf": "stretch",
                  "backgroundColor": "#fff",
                  "borderRadius": 10,
                  "marginBottom": 10,
                  "marginLeft": 2,
                  "marginRight": 2,
                  "marginTop": 5,
                  "padding": 10,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1845,
                  "shadowRadius": 1.62,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#eaeaea",
                  "borderRadius": 80,
                  "marginRight": 10,
                  "padding": 10,
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#4D5061",
                      "fontFamily": "apercu-bold",
                      "fontSize": 16,
                      "marginBottom": 0,
                      "marginTop": 1,
                    },
                    undefined,
                  ]
                }
              >
                Jeremy Bentham
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#6E707F",
                      "fontFamily": "apercu",
                      "fontSize": 16,
                      "fontStyle": "italic",
                      "marginBottom": 1,
                      "marginTop": 0,
                    },
                    undefined,
                  ]
                }
              >
                Philosophy Department
              </Text>
            </View>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          style={
            Object {
              "backgroundColor": "transparent",
            }
          }
        >
          <ViewManagerAdapter_ExpoLinearGradient
            proxiedProperties={
              Object {
                "colors": Array [
                  4279998859,
                  4283151357,
                ],
                "endPoint": Array [
                  1,
                  0,
                ],
                "locations": undefined,
                "startPoint": Array [
                  0,
                  1,
                ],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "elevation": 2,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 5,
                  "marginTop": 5,
                  "minHeight": 55,
                  "minWidth": 150,
                  "padding": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "shadowColor": "#1B998B",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.75,
                  "shadowRadius": 3,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fefefe",
                    "fontFamily": "apercu",
                    "fontSize": 20,
                    "marginBottom": 1,
                    "marginTop": 1,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Clear
            </Text>
          </ViewManagerAdapter_ExpoLinearGradient>
        </TouchableOpacity>
      </View>
    </View>
    <View
      style={
        Object {
          "bottom": 0,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": "100%",
            "flexDirection": "row",
            "justifyContent": "flex-end",
            "paddingBottom": 4,
            "paddingEnd": 4,
            "position": "absolute",
            "width": "100%",
          }
        }
      >
        <TouchableWithoutFeedback
          hitSlop={
            Object {
              "bottom": 4,
              "left": 4,
              "right": 4,
              "top": 4,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(250, 186, 48, 0.95)",
                },
                Object {
                  "borderRadius": 14,
                  "height": 28,
                  "justifyContent": "center",
                  "paddingHorizontal": 12,
                },
              ]
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontSize": 12,
                  "includeFontPadding": false,
                  "lineHeight": 16,
                }
              }
            >
              Dismiss All
            </Text>
          </View>
        </TouchableWithoutFeedback>
      </View>
      <RCTScrollView
        data={
          Array [
            Object {
              "category": "Each child in a list should have a unique \\"key\\" prop.﻿%s﻿%s See https://fb.me/react-warning-keys for more information.﻿%s",
              "warnings": Array [
                YellowBoxWarning {
                  "message": Object {
                    "content": "Each child in a list should have a unique \\"key\\" prop.

Check the render method of \`RecentResults\`. See https://fb.me/react-warning-keys for more information.
    in RecentResult (created by RecentResults)
    in RecentResults
    in View (created by View)
    in View (created by AppContainer)
    in View (created by View)
    in View (created by AppContainer)
    in AppContainer (at src/index.js:26)",
                    "substitutions": Array [
                      Object {
                        "length": 45,
                        "offset": 53,
                      },
                      Object {
                        "length": 0,
                        "offset": 98,
                      },
                      Object {
                        "length": 245,
                        "offset": 157,
                      },
                    ],
                  },
                  "stack": Array [
                    Object {
                      "arguments": Array [],
                      "column": 29,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js",
                      "lineNumber": 58,
                      "methodName": "Function.parse",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 56,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/YellowBox.js",
                      "lineNumber": 180,
                      "methodName": "registerError",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 21,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/YellowBox.js",
                      "lineNumber": 84,
                      "methodName": "errorImpl",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 13,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react-native/Libraries/YellowBox/YellowBox.js",
                      "lineNumber": 63,
                      "methodName": "BufferedConsole.console.error",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 31,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 167,
                      "methodName": "warningWithoutStack",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 26,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 638,
                      "methodName": "warning",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 4,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 1792,
                      "methodName": "validateExplicitKey",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 8,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 1818,
                      "methodName": "validateChildKeys",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 6,
                      "file": "/home/huey/Desktop/ucl-assistant-app/node_modules/react/cjs/react.development.js",
                      "lineNumber": 2052,
                      "methodName": "Object.createElementWithValidation [as createElement]",
                    },
                    Object {
                      "arguments": Array [],
                      "column": 4,
                      "file": "/home/huey/Desktop/ucl-assistant-app/screens/People/PeopleSearchScreen/RecentResults.tsx",
                      "lineNumber": 51,
                      "methodName": "RecentResults",
                    },
                  ],
                  "symbolicated": Object {
                    "error": null,
                    "stack": null,
                    "status": "NONE",
                  },
                },
              ],
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        maxToRenderPerBatch={10}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        scrollEnabled={false}
        scrollEventThrottle={50}
        scrollsToTop={false}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "height": 48.5,
          }
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            style={null}
          >
            <TouchableWithoutFeedback>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(250, 186, 48, 0.95)",
                    },
                    Object {
                      "height": 48,
                      "justifyContent": "center",
                      "marginTop": 0.5,
                      "paddingHorizontal": 12,
                    },
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={2}
                    style={
                      Object {
                        "color": "rgba(255, 255, 255, 1)",
                        "flex": 1,
                        "fontSize": 14,
                        "includeFontPadding": false,
                        "lineHeight": 18,
                      }
                    }
                  >
                    <Text>
                      Each child in a list should have a unique "key" prop.
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "rgba(255, 255, 255, 0.6)",
                        }
                      }
                    >
                      

Check the render method of \`RecentResults\`.
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "rgba(255, 255, 255, 0.6)",
                        }
                      }
                    >
                      
                    </Text>
                    <Text>
                       See https://fb.me/react-warning-keys for more information.
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "rgba(255, 255, 255, 0.6)",
                        }
                      }
                    >
                      
    in RecentResult (created by RecentResults)
    in RecentResults
    in View (created by View)
    in View (created by AppContainer)
    in View (created by View)
    in View (created by AppContainer)
    in AppContainer (at src/index.js:26)
                    </Text>
                  </Text>
                </View>
              </View>
            </TouchableWithoutFeedback>
          </View>
        </View>
      </RCTScrollView>
      <SafeAreaView
        style={
          Object {
            "backgroundColor": "rgba(250, 186, 48, 0.95)",
            "marginTop": 0.5,
          }
        }
      />
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <Text
        style={
          Array [
            Object {
              "color": "#4D5061",
              "fontFamily": "apercu-bold",
              "fontSize": 28,
              "marginBottom": 2,
              "marginTop": 8,
            },
            undefined,
          ]
        }
      >
        Recently Searched
      </Text>
      <TouchableOpacity
        activeOpacity={0.9}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#fff",
                "borderRadius": 10,
                "marginBottom": 10,
                "marginLeft": 2,
                "marginRight": 2,
                "marginTop": 5,
                "padding": 10,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.1845,
                "shadowRadius": 1.62,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#eaeaea",
                "borderRadius": 80,
                "marginRight": 10,
                "padding": 10,
              }
            }
          >
            <Text />
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#4D5061",
                    "fontFamily": "apercu-bold",
                    "fontSize": 16,
                    "marginBottom": 0,
                    "marginTop": 1,
                  },
                  undefined,
                ]
              }
            >
              Mr Potato
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "marginBottom": 1,
                    "marginTop": 0,
                  },
                  undefined,
                ]
              }
            >
              Department of Agriculture
            </Text>
          </View>
        </View>
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.9}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#fff",
                "borderRadius": 10,
                "marginBottom": 10,
                "marginLeft": 2,
                "marginRight": 2,
                "marginTop": 5,
                "padding": 10,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.1845,
                "shadowRadius": 1.62,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#eaeaea",
                "borderRadius": 80,
                "marginRight": 10,
                "padding": 10,
              }
            }
          >
            <Text />
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#4D5061",
                    "fontFamily": "apercu-bold",
                    "fontSize": 16,
                    "marginBottom": 0,
                    "marginTop": 1,
                  },
                  undefined,
                ]
              }
            >
              Chris P Bacon
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "marginBottom": 1,
                    "marginTop": 0,
                  },
                  undefined,
                ]
              }
            >
              Faculty of Medical Sciences
            </Text>
          </View>
        </View>
      </TouchableOpacity>
      <TouchableOpacity
        activeOpacity={0.9}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "#fff",
                "borderRadius": 10,
                "marginBottom": 10,
                "marginLeft": 2,
                "marginRight": 2,
                "marginTop": 5,
                "padding": 10,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.1845,
                "shadowRadius": 1.62,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#eaeaea",
                "borderRadius": 80,
                "marginRight": 10,
                "padding": 10,
              }
            }
          >
            <Text />
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#4D5061",
                    "fontFamily": "apercu-bold",
                    "fontSize": 16,
                    "marginBottom": 0,
                    "marginTop": 1,
                  },
                  undefined,
                ]
              }
            >
              Jeremy Bentham
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#6E707F",
                    "fontFamily": "apercu",
                    "fontSize": 16,
                    "fontStyle": "italic",
                    "marginBottom": 1,
                    "marginTop": 0,
                  },
                  undefined,
                ]
              }
            >
              Philosophy Department
            </Text>
          </View>
        </View>
      </TouchableOpacity>
      <TouchableOpacity
        style={
          Object {
            "backgroundColor": "transparent",
          }
        }
      >
        <ViewManagerAdapter_ExpoLinearGradient
          proxiedProperties={
            Object {
              "colors": Array [
                4279998859,
                4283151357,
              ],
              "endPoint": Array [
                1,
                0,
              ],
              "locations": undefined,
              "startPoint": Array [
                0,
                1,
              ],
            }
          }
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 8,
                "elevation": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 5,
                "marginTop": 5,
                "minHeight": 55,
                "minWidth": 150,
                "padding": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "shadowColor": "#1B998B",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.75,
                "shadowRadius": 3,
              },
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#fefefe",
                  "fontFamily": "apercu",
                  "fontSize": 20,
                  "marginBottom": 1,
                  "marginTop": 1,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Clear
          </Text>
        </ViewManagerAdapter_ExpoLinearGradient>
      </TouchableOpacity>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`RecentResults renders an empty RecentResults component 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  />,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
